apiVersion: v1
kind: ConfigMap
metadata:
  name: idp-config
data:
  verifier-config.json: |
    {
      "verifierUiUrl": "https://idp.walt-test.cloud/sharecredential?state=",
      "verifierApiUrl": "https://idp.walt-test.cloud/api/siop",
      "additionalPolicies": [
        {
          "policy": "EUPolicy"
        }
      ],
      "wallets": {
        "walt.id": {
          "id": "walt.id",
          "url": "https://wallet.walt-test.cloud",
          "presentPath": "api/siop/initiatePresentation/",
          "receivePath" : "api/siop/initiateIssuance/",
          "description": "walt.id web wallet"
        }
      }
    }
  idp-config.json: |
    {
      "externalUrl": "https://idp.walt-test.cloud",
      "claimConfig": {
        "vc_mappings": [
          {
            "scope": [ "gaiax" ],
            "claim": "name",
            "credentialType": "ParticipantCredential",
            "valuePath": "$.credentialSubject.hasLegallyBindingName"
          },
          {
            "scope": [ "gaiax" ],
            "claim": "country",
            "credentialType": "LegalPerson",
            "valuePath": "$.credentialSubject.gx-participant:legalAddress.gx-participant:addressCountryCode"
          },
          {
            "scope": [ "gaiax" ],
            "claim": "name",
            "credentialType": "ParticipantCredential",
            "valuePath": "$.credentialSubject.hasLegallyBindingName"
          },
          {
            "scope": [ "profile" ],
            "claim": "name",
            "credentialType": "VerifiableId",
            "valuePath": "$.credentialSubject.firstName $.credentialSubject.familyName"
          },
          {
            "scope": [ "profile" ],
            "claim": "family_name",
            "credentialType": "VerifiableId",
            "valuePath": "$.credentialSubject.familyName"
          },
          {
            "scope": [ "profile" ],
            "claim": "given_name",
            "credentialType": "VerifiableId",
            "valuePath": "$.credentialSubject.firstName"
          },
          {
            "scope": [ "profile" ],
            "claim": "gender",
            "credentialType": "VerifiableId",
            "valuePath": "$.credentialSubject.gender"
          },
          {
            "scope": [ "profile" ],
            "claim": "birthdate",
            "credentialType": "VerifiableId",
            "valuePath": "$.credentialSubject.dateOfBirth"
          },
          {
            "scope": [ "address" ],
            "claim": "address",
            "credentialType": "VerifiableId",
            "valuePath": "$.credentialSubject.currentAddress[0]"
          }
        ],
        "default_nft_token_claim": {
          "chain": "POLYGON",
          "smartContractAddress": "0x21dd9b1913d84ab295fdf19834b0b6824a5912ca"
        }
      }
    }
  nft-config.json: |
    {
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: idp-data-volume-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: idpkit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: idpkit
  template:
    metadata:
      labels:
        app: idpkit
      annotations:
        deployment/id: "_DEFAULT_DEPLOYMENT_"
    spec:
      containers:
        - name: idpkit
          image: waltid/idpkit:latest
          volumeMounts:
            - name: idp-config
              mountPath: "/waltid/idp/config/"
              readOnly: true
            - mountPath: "/waltid/idp/data/"
              name: idp-data
            - name: idpkit-nft-key-config
              mountPath: "/waltid/idp/nftconfig/"
          env:
            - name: WALTID_DATA_ROOT
              value: "/waltid/idp"
            - name: WALTID_CONFIG_PATH
              value: "/waltid/idp/nftconfig/"
          args:
            - run
            - --bind-all
          ports:
            - containerPort: 8080
              name: http-api
      volumes:
        - name: idp-config
          configMap:
            name: idp-config
        - name: idp-data
          persistentVolumeClaim:
            claimName: idp-data-volume-claim
        - name: idpkit-nft-key-config
          secret:
            secretName: idpkit-nft-key-config
---
kind: Service
apiVersion: v1
metadata:
  name: idpkit
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: idpkit
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: idpkit
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - idp.walt-test.cloud
      secretName: idp-tls-secret
  rules:
    - host: idp.walt-test.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: idpkit
                port:
                  number: 80
